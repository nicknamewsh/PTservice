package com.pt.ssm.service.impl;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.pt.ssm.constant.MsgConstant;
import com.pt.ssm.dao.DepartDao;
import com.pt.ssm.dao.WarrantyDao;
import com.pt.ssm.po.Depart;
import com.pt.ssm.po.Property;
import com.pt.ssm.po.User;
import com.pt.ssm.service.DepartService;
import com.pt.ssm.service.WarrantyService;
import com.pt.ssm.util.MD5Util;
import com.pt.ssm.util.ModelBean;
import com.pt.ssm.util.ModelResults;

@Service
@Transactional
public class WarrantyServiceImpl implements WarrantyService{
	
	@Autowired
	private WarrantyDao warrantyDao;
	private List<Property> propertyList = new ArrayList<Property>();
	
	
	@Override
	public ModelResults getWarrantyList(String id, String repairsname, long start, long end) throws UnsupportedEncodingException {
		ModelResults result = new ModelResults(start, end);
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("id", URLDecoder.decode(id, "UTF-8"));
		paramMap.put("repairsname", URLDecoder.decode(repairsname, "UTF-8"));
		paramMap.put("result", result);
		
		List<Map<String, Object>> propertytList = null;
		long count = 0;
		try {
			propertytList = warrantyDao.getWarrantyList(paramMap);
			count = warrantyDao.getWarrantyListCount(paramMap);
		} catch (Exception e) {
			e.printStackTrace();
			return result;
		}
		result.setRows(propertytList);
		result.setTotal(count);
		return result;
	}
	
	
	@Override
	public ModelBean addWarranty(String repairsname,String repairsphone,String applycontent,String applyaddress,String repairsdate,String applysource) {
		ModelBean bean = new ModelBean();
		Map<String, Object> paramMap = new HashMap<String, Object>();
		if("填报申请".equals(applysource)){
			applysource = "0";
		}
		paramMap.put("repairsname", repairsname);
		paramMap.put("repairsphone", repairsphone);
		paramMap.put("applycontent", applycontent);
		paramMap.put("applyaddress", applyaddress);
		paramMap.put("repairsdate", repairsdate);
		paramMap.put("applysource", applysource);
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		try {
			//添加用户
			Integer info = warrantyDao.addWarranty(paramMap);
			resultMap.put("result", info);
			bean.setCode(MsgConstant.CODE_SUCCESS_CREATED);
			bean.setSuccess(MsgConstant.MESSAGE_TRUE);
			bean.setData(resultMap);
			
		} catch (Exception e) {
			e.printStackTrace();
			bean.setCode(MsgConstant.CODE_INTERNALERR);
			bean.setSuccess(MsgConstant.MESSAGE_FALSE);
			bean.setMsg(MsgConstant.MESSAGE_INTERNAL_EXCEPTION);
		}
		
		return bean;
	}
	
	
	
	@Override
	public ModelBean upWarranty(String id,String repairsname,String repairsphone,String applycontent,String applyaddress,String repairsdate,String applysource) {
		ModelBean bean = new ModelBean();
		Map<String, Object> paramMap = new HashMap<String, Object>();
		if("填报申请".equals(applysource)){
			applysource = "0";
		}
		paramMap.put("id", id);
		paramMap.put("repairsname", repairsname);
		paramMap.put("repairsphone", repairsphone);
		paramMap.put("applycontent", applycontent);
		paramMap.put("applyaddress", applyaddress);
		paramMap.put("repairsdate", repairsdate);
		paramMap.put("applysource", applysource);
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		try {
			//添加用户
			Integer info = warrantyDao.upWarranty(paramMap);
			resultMap.put("result", info);
			bean.setCode(MsgConstant.CODE_SUCCESS_CREATED);
			bean.setSuccess(MsgConstant.MESSAGE_TRUE);
			bean.setData(resultMap);
			
		} catch (Exception e) {
			e.printStackTrace();
			bean.setCode(MsgConstant.CODE_INTERNALERR);
			bean.setSuccess(MsgConstant.MESSAGE_FALSE);
			bean.setMsg(MsgConstant.MESSAGE_INTERNAL_EXCEPTION);
		}
		
		return bean;
	}
	
	
	@Override
	public ModelBean getWarrantyID(Integer id) {
		ModelBean bean = new ModelBean();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("id", id);
		Map<String, Object> resultMap = new HashMap<String, Object>();
		try {
			//根据ID查询用户信息
			Property property=warrantyDao.getWarrantyID(map);
			resultMap.put("property", property);
			bean.setCode(MsgConstant.CODE_SUCCESS);
			bean.setSuccess(MsgConstant.MESSAGE_TRUE);
			bean.setObj(resultMap);
		} catch (Exception e) {
			e.printStackTrace();
			bean.setCode(MsgConstant.CODE_INTERNALERR);
			bean.setSuccess(MsgConstant.MESSAGE_FALSE);
			bean.setMsg(MsgConstant.MESSAGE_INTERNAL_EXCEPTION);
		}
		return bean;
	}
	
	
	
	@Override
	public ModelBean deWarranty(String id) {
		ModelBean bean = new ModelBean();
		String[] info = id.split(",");
		Integer[] ids = new Integer[info.length]; 
		//List list = new ArrayList();
		try {
			for(int i = 0; i <info.length; i++){
				ids[i] = Integer.parseInt(info[i]); 
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("id", ids);
		Map<String, Object> resultMap = new HashMap<String, Object>();
		try {
			//删除用户
			Integer user=warrantyDao.deWarranty(ids);
			resultMap.put("result", user);
			bean.setCode(MsgConstant.CODE_SUCCESS);
			bean.setSuccess(MsgConstant.MESSAGE_TRUE);
			bean.setObj(resultMap);
		} catch (Exception e) {
			e.printStackTrace();
			bean.setCode(MsgConstant.CODE_INTERNALERR);
			bean.setSuccess(MsgConstant.MESSAGE_FALSE);
			bean.setMsg(MsgConstant.MESSAGE_INTERNAL_EXCEPTION);
		}
		return bean;
	}
	
	
	@Override
	public ModelBean subWarranty(String id,String name) {
		ModelBean bean = new ModelBean();
		String[] info = id.split(",");
		Integer[] ids = new Integer[info.length]; 
		//List list = new ArrayList();
		try {
			for(int i = 0; i <info.length; i++){
				ids[i] = Integer.parseInt(info[i]); 
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("ids", ids);
		paramMap.put("name", name);
		Map<String, Object> resultMap = new HashMap<String, Object>();
		try {
			//提交用户
			Integer user=warrantyDao.subWarranty(paramMap);
			resultMap.put("result", user);
			bean.setCode(MsgConstant.CODE_SUCCESS);
			bean.setSuccess(MsgConstant.MESSAGE_TRUE);
			bean.setObj(resultMap);
		} catch (Exception e) {
			e.printStackTrace();
			bean.setCode(MsgConstant.CODE_INTERNALERR);
			bean.setSuccess(MsgConstant.MESSAGE_FALSE);
			bean.setMsg(MsgConstant.MESSAGE_INTERNAL_EXCEPTION);
		}
		return bean;
	}
	
	
}
