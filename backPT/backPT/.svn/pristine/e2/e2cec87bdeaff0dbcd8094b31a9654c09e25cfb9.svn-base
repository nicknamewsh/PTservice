<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pt.ssm.dao.AnnouncementDao">
	<sql id="getAuthorityList">
		<where>
			<if test="noticetitle != null and noticetitle !=''.toString()">
			1=1 and n.noticetitle like concat('%',concat(#{noticetitle},'%')) 
			</if>
			and n.noticestatues=0
		</where>
	</sql>
	
	<sql id="getWhere">
		<where>
			<if test="statues != null and statues !=''.toString()">
				and n.statues = #{statues}
			</if>
			and noticestatues=2
		</where>
	</sql>
	<select id="getData" parameterType="map" resultType="map">
	
    select * from (
    select w.*,rownum rn from (
      select n.id,
           n.noticeperson,
           n.noticeconent,
           to_char(n.noticetime,'yyyy/mm/dd') noticetime,
           n.noticestatues,
           n.statues,
           n.noticetitle, case when n.HTSTATUES=1 then '回退'  else '' end as  HTSTATUES,n.HTREASON from pt_notice n
 
    where noticestatues =0 and statues = #{departid} 
    order by n.noticetime desc,n.id desc 
    ) w where rownum &lt;=#{pageNum}*#{pageSize} ) q where q.rn &gt;=((#{pageNum}-1)*#{pageSize}+1)
    
    
	</select>
	
	
   <select id="getData1" parameterType="map" resultType="map">
    select n.id,
           n.noticeperson,
           n.noticeconent,
           to_char(n.noticetime,'yyyy/mm/dd') noticetime,
           n.noticestatues,
           n.statues,
           n.noticetitle from pt_notice n
    <include refid="getWhere"></include>
    order by n.noticetime desc,n.id desc 
	</select>
	
<!-- 	审核 -->
	<sql id="getAuthorityListsh">
		<where>
			<if test="Noticetitle != null and Noticetitle !=''.toString()">
			1=1 and n.Noticetitle like concat('%',concat(#{Noticetitle},'%')) 
			</if>
			and n.noticestatues=1
			
		</where>
	</sql>
  <select id="getDatash" parameterType="map" resultType="map">

   select * from (
    select n.id,
           n.noticeperson,
           n.noticeconent,
            to_char(n.noticetime,'yyyy/mm/dd') noticetime,
           n.noticestatues,
           n.statues,n.Noticetitle,rownum RN  from pt_notice n 
    where n.noticestatues=1 and  n.statues = #{departid}
     order by n.noticetime desc,n.id desc 
    ) WHERE RN BETWEEN #{page} AND #{pageSize}
    <if test="Noticetitle != null and Noticetitle !=''.toString()">
		and Noticetitle like concat('%',concat(#{Noticetitle},'%')) 
	</if> 

	</select>
	
	<select id="getCountsh" parameterType="map" resultType="long">
	SELECT COUNT(1) FROM pt_notice n
	<include refid="getAuthorityListsh"></include>
	</select>
	
	
<!-- 	发布 -->
	<sql id="getAuthorityListfb">
		<where>
			<if test="Noticetitle != null and Noticetitle !=''.toString()">
			1=1 and n.Noticetitle like concat('%',concat(#{Noticetitle},'%')) 
			</if>
			and n.noticestatues=2
			
		</where>
	</sql>
  <select id="getDatafb" parameterType="map" resultType="map">
    select * from (
    select n.id,
           n.noticeperson,
           n.noticeconent,
            to_char(n.noticetime,'yyyy/mm/dd') noticetime,
           n.noticestatues,
           n.statues,n.Noticetitle,rownum RN  from pt_notice n
    <include refid="getAuthorityListfb"></include>
     order by n.noticetime desc,n.id desc 
    ) WHERE RN BETWEEN #{page} AND #{pageSize}
    
	</select>
	
	<select id="getCountfb" parameterType="map" resultType="long">
	SELECT COUNT(1) FROM pt_notice n
	<include refid="getAuthorityListfb"></include>
	</select>
	
	
	
	
	
	
	
	
	<select id="getCount" parameterType="map" resultType="long">
	SELECT COUNT(1) FROM pt_notice n
	<include refid="getAuthorityList"></include>
	</select>	
	
	<insert id="addAnnounce" parameterType="map">
	INSERT INTO PT_NOTICE(ID,NOTICEPERSON,NOTICECONENT,NOTICETIME,NOTICESTATUES,STATUES,noticetitle,NOTICENAME) VALUES (SEQ_PT_NOTICE.NEXTVAL,#{noticeperson},#{noticeconent},
	to_date(#{noticetime},'yyyy/mm/dd'),#{noticestatues},#{statues},#{noticetitle},#{noticename})
	</insert>
	
	<delete id="deleteAnnounce" parameterType="int">
	DELETE FROM PT_NOTICE N WHERE N.ID IN 
	<foreach collection="array" item="list" open="(" separator="," close=")">
	#{list}
	</foreach>
	</delete>
	
	<update id="updateStatues" parameterType="map">
	update pt_notice set noticestatues = #{noticestatues} where id =#{id}
	</update>
	
	<select id="getOneById" parameterType="map" resultType="Announcement">
	SELECT N.ID,N.NOTICEPERSON,N.NOTICECONENT,to_char(N.NOTICETIME,'yyyy/mm/dd') NOTICETIME,N.NOTICESTATUES,N.STATUES,N.NOTICETITLE FROM PT_NOTICE N WHERE N.ID = #{id}
	</select>
	
	<update id="updateAnnounce" parameterType="map">
	UPDATE PT_NOTICE N SET N.NOTICEPERSON= #{noticeperson},N.NOTICECONENT=#{noticeconent},
	N.NOTICETIME = TO_DATE(#{noticetime},'yyyy/mm/dd'),N.STATUES=#{statues} ,
	N.NOTICETITLE=#{noticetitle} WHERE ID =#{id} 
	</update>
	
	
	<update id="updateshenhe" parameterType="map">
	update pt_notice set noticestatues = #{noticestatues},htstatues=#{htstatues} ,htreason=#{htreason}   where id =#{id}
	</update>
	
	

</mapper>