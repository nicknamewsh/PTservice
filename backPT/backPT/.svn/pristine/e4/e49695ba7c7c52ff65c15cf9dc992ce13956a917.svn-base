<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pt.ssm.dao.AnnouncementDao">
	<sql id="getAuthorityList">
		<where>
			<if test="noticeperson != null and noticeperson !=''.toString()">
			1=1 and n.noticeperson like concat('%',concat(#{noticeperson},'%')) 
			</if>
			
		</where>
	</sql>
	<select id="getData" parameterType="map" resultType="map">
	
    select * from (
    select w.*,rownum rn from (
    select n.id,
           n.noticeperson,
           n.noticeconent,
           n.noticetime,
           n.noticestatues,
           n.statues from pt_notice n
    <include refid="getAuthorityList"></include>
    order by n.id
    ) w where rownum &lt;=#{pageNum}*#{pageSize} ) q where q.rn &gt;=((#{pageNum}-1)*#{pageSize}+1)
    
    
	</select>
	
<!-- 	审核 -->
	<sql id="getAuthorityListsh">
		<where>
			<if test="Noticetitle != null and Noticetitle !=''.toString()">
			1=1 and n.Noticetitle like concat('%',concat(#{Noticetitle},'%')) 
			</if>
			and n.noticestatues=1
			
		</where>
	</sql>
  <select id="getDatash" parameterType="map" resultType="map">

   select * from (
    select n.id,
           n.noticeperson,
           n.noticeconent,
           n.noticetime,
           n.noticestatues,
           n.statues,n.Noticetitle,rownum RN  from pt_notice n
    <include refid="getAuthorityListsh"></include>
    ) WHERE RN BETWEEN #{page} AND #{pageSize}

	</select>
	
	<select id="getCountsh" parameterType="map" resultType="long">
	SELECT COUNT(1) FROM pt_notice n
	<include refid="getAuthorityListsh"></include>
	</select>
	
	
<!-- 	发布 -->
	<sql id="getAuthorityListfb">
		<where>
			<if test="Noticetitle != null and Noticetitle !=''.toString()">
			1=1 and n.Noticetitle like concat('%',concat(#{Noticetitle},'%')) 
			</if>
			and n.noticestatues=2
			
		</where>
	</sql>
  <select id="getDatafb" parameterType="map" resultType="map">
    select * from (
    select n.id,
           n.noticeperson,
           n.noticeconent,
           n.noticetime,
           n.noticestatues,
           n.statues,n.Noticetitle,rownum RN  from pt_notice n
    <include refid="getAuthorityListfb"></include>
    ) WHERE RN BETWEEN #{page} AND #{pageSize}
    
	</select>
	
	<select id="getCountfb" parameterType="map" resultType="long">
	SELECT COUNT(1) FROM pt_notice n
	<include refid="getAuthorityListfb"></include>
	</select>
	
	
	
	
	
	
	
	
	<select id="getCount" parameterType="map" resultType="long">
	SELECT COUNT(1) FROM pt_notice n
	<include refid="getAuthorityList"></include>
	</select>	
	
	<insert id="addAnnounce" parameterType="map">
	INSERT INTO PT_NOTICE(ID,NOTICEPERSON,NOTICECONENT,NOTICETIME,NOTICESTATUES,STATUES) VALUES (SEQ_PT_NOTICE.NEXTVAL,#{noticeperson},#{noticeconent},
	to_date(#{noticetime},'yyyy-mm-dd'),#{noticestatues},#{statues})
	</insert>
	
	<delete id="deleteAnnounce" parameterType="int">
	DELETE FROM PT_NOTICE N WHERE N.ID IN 
	<foreach collection="array" item="list" open="(" separator="," close=")">
	#{list}
	</foreach>
	</delete>
	
	<select id=""></select>
	
	
	
	
	
	<!-- <select id="getMenuList" parameterType="map" resultType="map">
	select * from (
	select m.menuid id,m.menuname name,m.pid pid,case when 1=1 then 'false' end checked,'true' open from PT_menu m where m.menuid not in (
select m.menuid from  PT_menu m left join PT_role_menu rm on m.menuid = rm.menuid where rm.roleid=#{roleid} 
)
union all
SELECT M.MENUID id,M.MENUNAME name,M.PID pId,(case when rm.menuid is not null then 'true' else 'false' end) checked,'true' open FROM PT_MENU M 
left join PT_role_menu rm on m.menuid = rm.menuid where rm.roleid=#{roleid} 
) order by id
	</select>
	
	<insert id="addrm" parameterType="java.util.List">
      INSERT INTO PT_ROLE_MENU
  	  (ID, ROLEID, MENUID) 
	<foreach collection="list" item="item" index="index" separator="union" open="(" close=")">
	select 
	       #{item.id,jdbcType=VARCHAR},
           #{item.roleid,jdbcType=VARCHAR},
           #{item.menuid,jdbcType=VARCHAR}
           from dual
   </foreach>
  </insert>
	
  <select id="getRoleMenuList" parameterType="map" resultType="map">
  SELECT id,roleid,menuid FROM PT_ROLE_MENU WHERE ROLEID = #{roleid}
  </select>
	
	<delete id="delrm" parameterType="int">
	DELETE FROM PT_role_menu M WHERE M.ROLEID in 
	<foreach collection="array" item="list" open="(" separator="," close=")">
	#{list}
	</foreach>
	</delete>
	
	<insert id="updaterm" parameterType="java.util.List">
	INSERT INTO PT_ROLE_MENU
  	  (ID, ROLEID, MENUID) 
  	<foreach collection="list" item="item" index="index" separator="union" open="(" close=")">
	select 
	       #{item.id,jdbcType=VARCHAR},
           #{item.roleid,jdbcType=VARCHAR},
           #{item.menuid,jdbcType=VARCHAR}
           from dual
   </foreach>  
	</insert>
	
	<select id="findMaxId" resultType="long">
	SELECT MAX(ID) ID FROM PT_role_menu
	</select>
	
	<delete id="delRmOneRole" parameterType="map">
	DELETE FROM PT_ROLE_MENU ZM WHERE 
	 ZM.ROLEID=#{roleid}
	</delete>
	
	
	
	<select id="getRoleInfo" parameterType="map" resultType="map">
	SELECT R.ROLEID,R.ROLENAME FROM PT_ROLE R WHERE R.ROLENAME LIKE CONCAT('%',CONCAT(#{rolename},'%'))
	</select> -->
</mapper>